{
  "abi": [
    {
      "type": "constructor",
      "inputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "approve",
      "inputs": [
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "balanceOf",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "checkInsurance",
      "inputs": [
        {
          "name": "_policyType",
          "type": "uint8",
          "internalType": "enum InsurancePolicyNFT.PolicyType"
        },
        {
          "name": "_tokenId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getApproved",
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isApprovedForAll",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isInsured",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "mintPolicy",
      "inputs": [
        {
          "name": "_policyType",
          "type": "uint8",
          "internalType": "enum InsurancePolicyNFT.PolicyType"
        },
        {
          "name": "_insuredTokenId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_coverageAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_premium",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_expiryTimestamp",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "name",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "ownerOf",
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "address",
          "internalType": "address"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "policies",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "policyHolder",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "policyType",
          "type": "uint8",
          "internalType": "enum InsurancePolicyNFT.PolicyType"
        },
        {
          "name": "insuredTokenId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "coverageAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "premium",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "expiryTimestamp",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "isActive",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "safeTransferFrom",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "data",
          "type": "bytes",
          "internalType": "bytes"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "setApprovalForAll",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "supportsInterface",
      "inputs": [
        {
          "name": "interfaceId",
          "type": "bytes4",
          "internalType": "bytes4"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "symbol",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "tokenURI",
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "string",
          "internalType": "string"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferFrom",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "Approval",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ApprovalForAll",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "operator",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "approved",
          "type": "bool",
          "indexed": false,
          "internalType": "bool"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "PolicyMinted",
      "inputs": [
        {
          "name": "policyTokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "policyHolder",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "policyType",
          "type": "uint8",
          "indexed": false,
          "internalType": "enum InsurancePolicyNFT.PolicyType"
        },
        {
          "name": "insuredTokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "coverageAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Transfer",
      "inputs": [
        {
          "name": "from",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "to",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "ERC721IncorrectOwner",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InsufficientApproval",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "tokenId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidApprover",
      "inputs": [
        {
          "name": "approver",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOperator",
      "inputs": [
        {
          "name": "operator",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidOwner",
      "inputs": [
        {
          "name": "owner",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidReceiver",
      "inputs": [
        {
          "name": "receiver",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC721InvalidSender",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    {
      "type": "error",
      "name": "ERC721NonexistentToken",
      "inputs": [
        {
          "name": "tokenId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ]
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561000f575f80fd5b506040518060400160405280601681526020017f5368697042726f6b6572616765496e737572616e6365000000000000000000008152506040518060400160405280600381526020017f5342490000000000000000000000000000000000000000000000000000000000815250815f908161008a91906102dc565b50806001908161009a91906102dc565b5050506103ab565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061011d57607f821691505b6020821081036101305761012f6100d9565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026101927fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82610157565b61019c8683610157565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f6101e06101db6101d6846101b4565b6101bd565b6101b4565b9050919050565b5f819050919050565b6101f9836101c6565b61020d610205826101e7565b848454610163565b825550505050565b5f90565b610221610215565b61022c8184846101f0565b505050565b5b8181101561024f576102445f82610219565b600181019050610232565b5050565b601f8211156102945761026581610136565b61026e84610148565b8101602085101561027d578190505b61029161028985610148565b830182610231565b50505b505050565b5f82821c905092915050565b5f6102b45f1984600802610299565b1980831691505092915050565b5f6102cc83836102a5565b9150826002028217905092915050565b6102e5826100a2565b67ffffffffffffffff8111156102fe576102fd6100ac565b5b6103088254610106565b610313828285610253565b5f60209050601f831160018114610344575f8415610332578287015190505b61033c85826102c1565b8655506103a3565b601f19841661035286610136565b5f5b8281101561037957848901518255600182019150602085019450602081019050610354565b868310156103965784890151610392601f8916826102a5565b8355505b6001600288020188555050505b505050505050565b61257b806103b85f395ff3fe6080604052600436106100fd575f3560e01c806370a0823111610094578063c87b56dd11610063578063c87b56dd14610349578063d3e8948314610385578063e19cdacd146103c7578063e985e9c514610403578063fb7f23121461043f576100fd565b806370a082311461029357806395d89b41146102cf578063a22cb465146102f9578063b88d4fde14610321576100fd565b8063095ea7b3116100d0578063095ea7b3146101df57806323b872dd1461020757806342842e0e1461022f5780636352211e14610257576100fd565b806301ffc9a71461010157806306fdde031461013d578063081812fc14610167578063094815ef146101a3575b5f80fd5b34801561010c575f80fd5b5061012760048036038101906101229190611a9f565b61045b565b6040516101349190611ae4565b60405180910390f35b348015610148575f80fd5b5061015161053c565b60405161015e9190611b6d565b60405180910390f35b348015610172575f80fd5b5061018d60048036038101906101889190611bc0565b6105cb565b60405161019a9190611c2a565b60405180910390f35b3480156101ae575f80fd5b506101c960048036038101906101c49190611c66565b6105e6565b6040516101d69190611ae4565b60405180910390f35b3480156101ea575f80fd5b5061020560048036038101906102009190611cce565b61062e565b005b348015610212575f80fd5b5061022d60048036038101906102289190611d0c565b610644565b005b34801561023a575f80fd5b5061025560048036038101906102509190611d0c565b610743565b005b348015610262575f80fd5b5061027d60048036038101906102789190611bc0565b610762565b60405161028a9190611c2a565b60405180910390f35b34801561029e575f80fd5b506102b960048036038101906102b49190611d5c565b610773565b6040516102c69190611d96565b60405180910390f35b3480156102da575f80fd5b506102e3610829565b6040516102f09190611b6d565b60405180910390f35b348015610304575f80fd5b5061031f600480360381019061031a9190611dd9565b6108b9565b005b34801561032c575f80fd5b5061034760048036038101906103429190611f43565b6108cf565b005b348015610354575f80fd5b5061036f600480360381019061036a9190611bc0565b6108ec565b60405161037c9190611b6d565b60405180910390f35b348015610390575f80fd5b506103ab60048036038101906103a69190611bc0565b610952565b6040516103be9796959493929190612036565b60405180910390f35b3480156103d2575f80fd5b506103ed60048036038101906103e891906120a3565b6109c7565b6040516103fa9190611ae4565b60405180910390f35b34801561040e575f80fd5b50610429600480360381019061042491906120e1565b6109f1565b6040516104369190611ae4565b60405180910390f35b6104596004803603810190610454919061211f565b610a7f565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061052557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610535575061053482610cfb565b5b9050919050565b60605f805461054a906121c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610576906121c3565b80156105c15780601f10610598576101008083540402835291602001916105c1565b820191905f5260205f20905b8154815290600101906020018083116105a457829003601f168201915b5050505050905090565b5f6105d582610d64565b506105df82610dea565b9050919050565b5f60075f8460018111156105fd576105fc611fc3565b5b81526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff16905092915050565b610640828261063b610e23565b610e2a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106b4575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106ab9190611c2a565b60405180910390fd5b5f6106c783836106c2610e23565b610e3c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461073d578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610734939291906121f3565b60405180910390fd5b50505050565b61075d83838360405180602001604052805f8152506108cf565b505050565b5f61076c82610d64565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107e4575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107db9190611c2a565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060018054610838906121c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610864906121c3565b80156108af5780601f10610886576101008083540402835291602001916108af565b820191905f5260205f20905b81548152906001019060200180831161089257829003601f168201915b5050505050905090565b6108cb6108c4610e23565b8383611047565b5050565b6108da848484610644565b6108e6848484846111b0565b50505050565b60606108f782610d64565b505f610901611362565b90505f81511161091f5760405180602001604052805f81525061094a565b8061092984611378565b60405160200161093a929190612262565b6040516020818303038152906040525b915050919050565b6006602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460ff1690806001015490806002015490806003015490806004015490806005015f9054906101000a900460ff16905087565b6007602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b813414610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab8906122cf565b60405180910390fd5b428111610b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afa9061235d565b60405180910390fd5b5f60085f815480929190610b16906123a8565b9190505590505f339050610b2a8183611442565b6040518060e001604052808273ffffffffffffffffffffffffffffffffffffffff168152602001886001811115610b6457610b63611fc3565b5b81526020018781526020018681526020018581526020018481526020016001151581525060065f8481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548160ff02191690836001811115610c0757610c06611fc3565b5b021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004015560c0820151816005015f6101000a81548160ff021916908315150217905550905050600160075f896001811115610c6e57610c6d611fc3565b5b81526020019081526020015f205f8881526020019081526020015f205f6101000a81548160ff021916908315150217905550858173ffffffffffffffffffffffffffffffffffffffff16837f784ee2db912178a4a6133cb74b5ef0513b18040b99cd0d312611a437be2f38bc8a89604051610cea9291906123ef565b60405180910390a450505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610d6f8361145f565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610de157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610dd89190611d96565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610e378383836001611498565b505050565b5f80610e478461145f565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e8857610e87818486611657565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f1357610ec75f855f80611498565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f9257600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110b757816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110ae9190611c2a565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111a39190611ae4565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b111561135c578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026111f3610e23565b8685856040518563ffffffff1660e01b81526004016112159493929190612468565b6020604051808303815f875af192505050801561125057506040513d601f19601f8201168201806040525081019061124d91906124c6565b60015b6112d1573d805f811461127e576040519150601f19603f3d011682016040523d82523d5f602084013e611283565b606091505b505f8151036112c957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112c09190611c2a565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461135a57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113519190611c2a565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f60016113868461171a565b0190505f8167ffffffffffffffff8111156113a4576113a3611e1f565b5b6040519080825280601f01601f1916602001820160405280156113d65781602001600182028036833780820191505090505b5090505f82602001820190505b600115611437578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161142c5761142b6124f1565b5b0494505f85036113e3575b819350505050919050565b61145b828260405180602001604052805f81525061186b565b5050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806114d057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611602575f6114df84610d64565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561154957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561155c575061155a81846109f1565b155b1561159e57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016115959190611c2a565b60405180910390fd5b811561160057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611662838383611886565b611715575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116d657806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116cd9190611d96565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161170c92919061251e565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611776577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161176c5761176b6124f1565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106117b3576d04ee2d6d415b85acef810000000083816117a9576117a86124f1565b5b0492506020810190505b662386f26fc1000083106117e257662386f26fc1000083816117d8576117d76124f1565b5b0492506010810190505b6305f5e100831061180b576305f5e1008381611801576118006124f1565b5b0492506008810190505b6127108310611830576127108381611826576118256124f1565b5b0492506004810190505b606483106118535760648381611849576118486124f1565b5b0492506002810190505b600a8310611862576001810190505b80915050919050565b6118758383611946565b6118815f8484846111b0565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561193d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806118fe57506118fd84846109f1565b5b8061193c57508273ffffffffffffffffffffffffffffffffffffffff1661192483610dea565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119b6575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119ad9190611c2a565b60405180910390fd5b5f6119c283835f610e3c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a34575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611a2b9190611c2a565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a7e81611a4a565b8114611a88575f80fd5b50565b5f81359050611a9981611a75565b92915050565b5f60208284031215611ab457611ab3611a42565b5b5f611ac184828501611a8b565b91505092915050565b5f8115159050919050565b611ade81611aca565b82525050565b5f602082019050611af75f830184611ad5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611b3f82611afd565b611b498185611b07565b9350611b59818560208601611b17565b611b6281611b25565b840191505092915050565b5f6020820190508181035f830152611b858184611b35565b905092915050565b5f819050919050565b611b9f81611b8d565b8114611ba9575f80fd5b50565b5f81359050611bba81611b96565b92915050565b5f60208284031215611bd557611bd4611a42565b5b5f611be284828501611bac565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c1482611beb565b9050919050565b611c2481611c0a565b82525050565b5f602082019050611c3d5f830184611c1b565b92915050565b60028110611c4f575f80fd5b50565b5f81359050611c6081611c43565b92915050565b5f8060408385031215611c7c57611c7b611a42565b5b5f611c8985828601611c52565b9250506020611c9a85828601611bac565b9150509250929050565b611cad81611c0a565b8114611cb7575f80fd5b50565b5f81359050611cc881611ca4565b92915050565b5f8060408385031215611ce457611ce3611a42565b5b5f611cf185828601611cba565b9250506020611d0285828601611bac565b9150509250929050565b5f805f60608486031215611d2357611d22611a42565b5b5f611d3086828701611cba565b9350506020611d4186828701611cba565b9250506040611d5286828701611bac565b9150509250925092565b5f60208284031215611d7157611d70611a42565b5b5f611d7e84828501611cba565b91505092915050565b611d9081611b8d565b82525050565b5f602082019050611da95f830184611d87565b92915050565b611db881611aca565b8114611dc2575f80fd5b50565b5f81359050611dd381611daf565b92915050565b5f8060408385031215611def57611dee611a42565b5b5f611dfc85828601611cba565b9250506020611e0d85828601611dc5565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e5582611b25565b810181811067ffffffffffffffff82111715611e7457611e73611e1f565b5b80604052505050565b5f611e86611a39565b9050611e928282611e4c565b919050565b5f67ffffffffffffffff821115611eb157611eb0611e1f565b5b611eba82611b25565b9050602081019050919050565b828183375f83830152505050565b5f611ee7611ee284611e97565b611e7d565b905082815260208101848484011115611f0357611f02611e1b565b5b611f0e848285611ec7565b509392505050565b5f82601f830112611f2a57611f29611e17565b5b8135611f3a848260208601611ed5565b91505092915050565b5f805f8060808587031215611f5b57611f5a611a42565b5b5f611f6887828801611cba565b9450506020611f7987828801611cba565b9350506040611f8a87828801611bac565b925050606085013567ffffffffffffffff811115611fab57611faa611a46565b5b611fb787828801611f16565b91505092959194509250565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6002811061200157612000611fc3565b5b50565b5f81905061201182611ff0565b919050565b5f61202082612004565b9050919050565b61203081612016565b82525050565b5f60e0820190506120495f83018a611c1b565b6120566020830189612027565b6120636040830188611d87565b6120706060830187611d87565b61207d6080830186611d87565b61208a60a0830185611d87565b61209760c0830184611ad5565b98975050505050505050565b5f80604083850312156120b9576120b8611a42565b5b5f6120c685828601611bac565b92505060206120d785828601611bac565b9150509250929050565b5f80604083850312156120f7576120f6611a42565b5b5f61210485828601611cba565b925050602061211585828601611cba565b9150509250929050565b5f805f805f60a0868803121561213857612137611a42565b5b5f61214588828901611c52565b955050602061215688828901611bac565b945050604061216788828901611bac565b935050606061217888828901611bac565b925050608061218988828901611bac565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121da57607f821691505b6020821081036121ed576121ec612196565b5b50919050565b5f6060820190506122065f830186611c1b565b6122136020830185611d87565b6122206040830184611c1b565b949350505050565b5f81905092915050565b5f61223c82611afd565b6122468185612228565b9350612256818560208601611b17565b80840191505092915050565b5f61226d8285612232565b91506122798284612232565b91508190509392505050565b7f49504e46543a20496e636f7272656374207072656d69756d20706169640000005f82015250565b5f6122b9601d83611b07565b91506122c482612285565b602082019050919050565b5f6020820190508181035f8301526122e6816122ad565b9050919050565b7f49504e46543a20506f6c696379206d7573742065787069726520696e207468655f8201527f2066757475726500000000000000000000000000000000000000000000000000602082015250565b5f612347602783611b07565b9150612352826122ed565b604082019050919050565b5f6020820190508181035f8301526123748161233b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123b282611b8d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123e4576123e361237b565b5b600182019050919050565b5f6040820190506124025f830185612027565b61240f6020830184611d87565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61243a82612416565b6124448185612420565b9350612454818560208601611b17565b61245d81611b25565b840191505092915050565b5f60808201905061247b5f830187611c1b565b6124886020830186611c1b565b6124956040830185611d87565b81810360608301526124a78184612430565b905095945050505050565b5f815190506124c081611a75565b92915050565b5f602082840312156124db576124da611a42565b5b5f6124e8848285016124b2565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506125315f830185611c1b565b61253e6020830184611d87565b939250505056fea264697066735822122059625cf2c10485467b7d4683801f875f28223f4231e7aa829e90d96f1127465e64736f6c634300081a0033",
    "sourceMap": "248:3329:13:-:0;;;1208:56;;;;;;;;;;1381:113:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1455:5;1447;:13;;;;;;:::i;:::-;;1480:7;1470;:17;;;;;;:::i;:::-;;1381:113;;248:3329:13;;7:99:16;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;248:3329:13:-;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100fd575f3560e01c806370a0823111610094578063c87b56dd11610063578063c87b56dd14610349578063d3e8948314610385578063e19cdacd146103c7578063e985e9c514610403578063fb7f23121461043f576100fd565b806370a082311461029357806395d89b41146102cf578063a22cb465146102f9578063b88d4fde14610321576100fd565b8063095ea7b3116100d0578063095ea7b3146101df57806323b872dd1461020757806342842e0e1461022f5780636352211e14610257576100fd565b806301ffc9a71461010157806306fdde031461013d578063081812fc14610167578063094815ef146101a3575b5f80fd5b34801561010c575f80fd5b5061012760048036038101906101229190611a9f565b61045b565b6040516101349190611ae4565b60405180910390f35b348015610148575f80fd5b5061015161053c565b60405161015e9190611b6d565b60405180910390f35b348015610172575f80fd5b5061018d60048036038101906101889190611bc0565b6105cb565b60405161019a9190611c2a565b60405180910390f35b3480156101ae575f80fd5b506101c960048036038101906101c49190611c66565b6105e6565b6040516101d69190611ae4565b60405180910390f35b3480156101ea575f80fd5b5061020560048036038101906102009190611cce565b61062e565b005b348015610212575f80fd5b5061022d60048036038101906102289190611d0c565b610644565b005b34801561023a575f80fd5b5061025560048036038101906102509190611d0c565b610743565b005b348015610262575f80fd5b5061027d60048036038101906102789190611bc0565b610762565b60405161028a9190611c2a565b60405180910390f35b34801561029e575f80fd5b506102b960048036038101906102b49190611d5c565b610773565b6040516102c69190611d96565b60405180910390f35b3480156102da575f80fd5b506102e3610829565b6040516102f09190611b6d565b60405180910390f35b348015610304575f80fd5b5061031f600480360381019061031a9190611dd9565b6108b9565b005b34801561032c575f80fd5b5061034760048036038101906103429190611f43565b6108cf565b005b348015610354575f80fd5b5061036f600480360381019061036a9190611bc0565b6108ec565b60405161037c9190611b6d565b60405180910390f35b348015610390575f80fd5b506103ab60048036038101906103a69190611bc0565b610952565b6040516103be9796959493929190612036565b60405180910390f35b3480156103d2575f80fd5b506103ed60048036038101906103e891906120a3565b6109c7565b6040516103fa9190611ae4565b60405180910390f35b34801561040e575f80fd5b50610429600480360381019061042491906120e1565b6109f1565b6040516104369190611ae4565b60405180910390f35b6104596004803603810190610454919061211f565b610a7f565b005b5f7f80ac58cd000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061052557507f5b5e139f000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916145b80610535575061053482610cfb565b5b9050919050565b60605f805461054a906121c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610576906121c3565b80156105c15780601f10610598576101008083540402835291602001916105c1565b820191905f5260205f20905b8154815290600101906020018083116105a457829003601f168201915b5050505050905090565b5f6105d582610d64565b506105df82610dea565b9050919050565b5f60075f8460018111156105fd576105fc611fc3565b5b81526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff16905092915050565b610640828261063b610e23565b610e2a565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036106b4575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016106ab9190611c2a565b60405180910390fd5b5f6106c783836106c2610e23565b610e3c565b90508373ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461073d578382826040517f64283d7b000000000000000000000000000000000000000000000000000000008152600401610734939291906121f3565b60405180910390fd5b50505050565b61075d83838360405180602001604052805f8152506108cf565b505050565b5f61076c82610d64565b9050919050565b5f8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036107e4575f6040517f89c62b640000000000000000000000000000000000000000000000000000000081526004016107db9190611c2a565b60405180910390fd5b60035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b606060018054610838906121c3565b80601f0160208091040260200160405190810160405280929190818152602001828054610864906121c3565b80156108af5780601f10610886576101008083540402835291602001916108af565b820191905f5260205f20905b81548152906001019060200180831161089257829003601f168201915b5050505050905090565b6108cb6108c4610e23565b8383611047565b5050565b6108da848484610644565b6108e6848484846111b0565b50505050565b60606108f782610d64565b505f610901611362565b90505f81511161091f5760405180602001604052805f81525061094a565b8061092984611378565b60405160200161093a929190612262565b6040516020818303038152906040525b915050919050565b6006602052805f5260405f205f91509050805f015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690805f0160149054906101000a900460ff1690806001015490806002015490806003015490806004015490806005015f9054906101000a900460ff16905087565b6007602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b5f60055f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b813414610ac1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ab8906122cf565b60405180910390fd5b428111610b03576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610afa9061235d565b60405180910390fd5b5f60085f815480929190610b16906123a8565b9190505590505f339050610b2a8183611442565b6040518060e001604052808273ffffffffffffffffffffffffffffffffffffffff168152602001886001811115610b6457610b63611fc3565b5b81526020018781526020018681526020018581526020018481526020016001151581525060065f8481526020019081526020015f205f820151815f015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151815f0160146101000a81548160ff02191690836001811115610c0757610c06611fc3565b5b021790555060408201518160010155606082015181600201556080820151816003015560a0820151816004015560c0820151816005015f6101000a81548160ff021916908315150217905550905050600160075f896001811115610c6e57610c6d611fc3565b5b81526020019081526020015f205f8881526020019081526020015f205f6101000a81548160ff021916908315150217905550858173ffffffffffffffffffffffffffffffffffffffff16837f784ee2db912178a4a6133cb74b5ef0513b18040b99cd0d312611a437be2f38bc8a89604051610cea9291906123ef565b60405180910390a450505050505050565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f80610d6f8361145f565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610de157826040517f7e273289000000000000000000000000000000000000000000000000000000008152600401610dd89190611d96565b60405180910390fd5b80915050919050565b5f60045f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b5f33905090565b610e378383836001611498565b505050565b5f80610e478461145f565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614610e8857610e87818486611657565b5b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614610f1357610ec75f855f80611498565b600160035f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825403925050819055505b5f73ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff1614610f9257600160035f8773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8460025f8681526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60405160405180910390a4809150509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036110b757816040517f5b08ba180000000000000000000000000000000000000000000000000000000081526004016110ae9190611c2a565b60405180910390fd5b8060055f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31836040516111a39190611ae4565b60405180910390a3505050565b5f8373ffffffffffffffffffffffffffffffffffffffff163b111561135c578273ffffffffffffffffffffffffffffffffffffffff1663150b7a026111f3610e23565b8685856040518563ffffffff1660e01b81526004016112159493929190612468565b6020604051808303815f875af192505050801561125057506040513d601f19601f8201168201806040525081019061124d91906124c6565b60015b6112d1573d805f811461127e576040519150601f19603f3d011682016040523d82523d5f602084013e611283565b606091505b505f8151036112c957836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016112c09190611c2a565b60405180910390fd5b805181602001fd5b63150b7a0260e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161461135a57836040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016113519190611c2a565b60405180910390fd5b505b50505050565b606060405180602001604052805f815250905090565b60605f60016113868461171a565b0190505f8167ffffffffffffffff8111156113a4576113a3611e1f565b5b6040519080825280601f01601f1916602001820160405280156113d65781602001600182028036833780820191505090505b5090505f82602001820190505b600115611437578080600190039150507f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a858161142c5761142b6124f1565b5b0494505f85036113e3575b819350505050919050565b61145b828260405180602001604052805f81525061186b565b5050565b5f60025f8381526020019081526020015f205f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b80806114d057505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614155b15611602575f6114df84610d64565b90505f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561154957508273ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614155b801561155c575061155a81846109f1565b155b1561159e57826040517fa9fbf51f0000000000000000000000000000000000000000000000000000000081526004016115959190611c2a565b60405180910390fd5b811561160057838573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45b505b8360045f8581526020019081526020015f205f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050505050565b611662838383611886565b611715575f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036116d657806040517f7e2732890000000000000000000000000000000000000000000000000000000081526004016116cd9190611d96565b60405180910390fd5b81816040517f177e802f00000000000000000000000000000000000000000000000000000000815260040161170c92919061251e565b60405180910390fd5b505050565b5f805f90507a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310611776577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000838161176c5761176b6124f1565b5b0492506040810190505b6d04ee2d6d415b85acef810000000083106117b3576d04ee2d6d415b85acef810000000083816117a9576117a86124f1565b5b0492506020810190505b662386f26fc1000083106117e257662386f26fc1000083816117d8576117d76124f1565b5b0492506010810190505b6305f5e100831061180b576305f5e1008381611801576118006124f1565b5b0492506008810190505b6127108310611830576127108381611826576118256124f1565b5b0492506004810190505b606483106118535760648381611849576118486124f1565b5b0492506002810190505b600a8310611862576001810190505b80915050919050565b6118758383611946565b6118815f8484846111b0565b505050565b5f8073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415801561193d57508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1614806118fe57506118fd84846109f1565b5b8061193c57508273ffffffffffffffffffffffffffffffffffffffff1661192483610dea565b73ffffffffffffffffffffffffffffffffffffffff16145b5b90509392505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036119b6575f6040517f64a0ae920000000000000000000000000000000000000000000000000000000081526004016119ad9190611c2a565b60405180910390fd5b5f6119c283835f610e3c565b90505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614611a34575f6040517f73c6ac6e000000000000000000000000000000000000000000000000000000008152600401611a2b9190611c2a565b60405180910390fd5b505050565b5f604051905090565b5f80fd5b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b611a7e81611a4a565b8114611a88575f80fd5b50565b5f81359050611a9981611a75565b92915050565b5f60208284031215611ab457611ab3611a42565b5b5f611ac184828501611a8b565b91505092915050565b5f8115159050919050565b611ade81611aca565b82525050565b5f602082019050611af75f830184611ad5565b92915050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f611b3f82611afd565b611b498185611b07565b9350611b59818560208601611b17565b611b6281611b25565b840191505092915050565b5f6020820190508181035f830152611b858184611b35565b905092915050565b5f819050919050565b611b9f81611b8d565b8114611ba9575f80fd5b50565b5f81359050611bba81611b96565b92915050565b5f60208284031215611bd557611bd4611a42565b5b5f611be284828501611bac565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611c1482611beb565b9050919050565b611c2481611c0a565b82525050565b5f602082019050611c3d5f830184611c1b565b92915050565b60028110611c4f575f80fd5b50565b5f81359050611c6081611c43565b92915050565b5f8060408385031215611c7c57611c7b611a42565b5b5f611c8985828601611c52565b9250506020611c9a85828601611bac565b9150509250929050565b611cad81611c0a565b8114611cb7575f80fd5b50565b5f81359050611cc881611ca4565b92915050565b5f8060408385031215611ce457611ce3611a42565b5b5f611cf185828601611cba565b9250506020611d0285828601611bac565b9150509250929050565b5f805f60608486031215611d2357611d22611a42565b5b5f611d3086828701611cba565b9350506020611d4186828701611cba565b9250506040611d5286828701611bac565b9150509250925092565b5f60208284031215611d7157611d70611a42565b5b5f611d7e84828501611cba565b91505092915050565b611d9081611b8d565b82525050565b5f602082019050611da95f830184611d87565b92915050565b611db881611aca565b8114611dc2575f80fd5b50565b5f81359050611dd381611daf565b92915050565b5f8060408385031215611def57611dee611a42565b5b5f611dfc85828601611cba565b9250506020611e0d85828601611dc5565b9150509250929050565b5f80fd5b5f80fd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b611e5582611b25565b810181811067ffffffffffffffff82111715611e7457611e73611e1f565b5b80604052505050565b5f611e86611a39565b9050611e928282611e4c565b919050565b5f67ffffffffffffffff821115611eb157611eb0611e1f565b5b611eba82611b25565b9050602081019050919050565b828183375f83830152505050565b5f611ee7611ee284611e97565b611e7d565b905082815260208101848484011115611f0357611f02611e1b565b5b611f0e848285611ec7565b509392505050565b5f82601f830112611f2a57611f29611e17565b5b8135611f3a848260208601611ed5565b91505092915050565b5f805f8060808587031215611f5b57611f5a611a42565b5b5f611f6887828801611cba565b9450506020611f7987828801611cba565b9350506040611f8a87828801611bac565b925050606085013567ffffffffffffffff811115611fab57611faa611a46565b5b611fb787828801611f16565b91505092959194509250565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6002811061200157612000611fc3565b5b50565b5f81905061201182611ff0565b919050565b5f61202082612004565b9050919050565b61203081612016565b82525050565b5f60e0820190506120495f83018a611c1b565b6120566020830189612027565b6120636040830188611d87565b6120706060830187611d87565b61207d6080830186611d87565b61208a60a0830185611d87565b61209760c0830184611ad5565b98975050505050505050565b5f80604083850312156120b9576120b8611a42565b5b5f6120c685828601611bac565b92505060206120d785828601611bac565b9150509250929050565b5f80604083850312156120f7576120f6611a42565b5b5f61210485828601611cba565b925050602061211585828601611cba565b9150509250929050565b5f805f805f60a0868803121561213857612137611a42565b5b5f61214588828901611c52565b955050602061215688828901611bac565b945050604061216788828901611bac565b935050606061217888828901611bac565b925050608061218988828901611bac565b9150509295509295909350565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806121da57607f821691505b6020821081036121ed576121ec612196565b5b50919050565b5f6060820190506122065f830186611c1b565b6122136020830185611d87565b6122206040830184611c1b565b949350505050565b5f81905092915050565b5f61223c82611afd565b6122468185612228565b9350612256818560208601611b17565b80840191505092915050565b5f61226d8285612232565b91506122798284612232565b91508190509392505050565b7f49504e46543a20496e636f7272656374207072656d69756d20706169640000005f82015250565b5f6122b9601d83611b07565b91506122c482612285565b602082019050919050565b5f6020820190508181035f8301526122e6816122ad565b9050919050565b7f49504e46543a20506f6c696379206d7573742065787069726520696e207468655f8201527f2066757475726500000000000000000000000000000000000000000000000000602082015250565b5f612347602783611b07565b9150612352826122ed565b604082019050919050565b5f6020820190508181035f8301526123748161233b565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6123b282611b8d565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036123e4576123e361237b565b5b600182019050919050565b5f6040820190506124025f830185612027565b61240f6020830184611d87565b9392505050565b5f81519050919050565b5f82825260208201905092915050565b5f61243a82612416565b6124448185612420565b9350612454818560208601611b17565b61245d81611b25565b840191505092915050565b5f60808201905061247b5f830187611c1b565b6124886020830186611c1b565b6124956040830185611d87565b81810360608301526124a78184612430565b905095945050505050565b5f815190506124c081611a75565b92915050565b5f602082840312156124db576124da611a42565b5b5f6124e8848285016124b2565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f6040820190506125315f830185611c1b565b61253e6020830184611d87565b939250505056fea264697066735822122059625cf2c10485467b7d4683801f875f28223f4231e7aa829e90d96f1127465e64736f6c634300081a0033",
    "sourceMap": "248:3329:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1561:300:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:89;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3497:154;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3313:262:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3323:113:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4143:578;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4787:132;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2185:118;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1920:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2518:93;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3718:144;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4985:208;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2677:255;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;700:51:13;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;894:61;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3928:153:1;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1662:1240:13;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1561:300:1;1663:4;1713:25;1698:40;;;:11;:40;;;;:104;;;;1769:33;1754:48;;;:11;:48;;;;1698:104;:156;;;;1818:36;1842:11;1818:23;:36::i;:::-;1698:156;1679:175;;1561:300;;;:::o;2365:89::-;2410:13;2442:5;2435:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:89;:::o;3497:154::-;3564:7;3583:22;3597:7;3583:13;:22::i;:::-;;3623:21;3636:7;3623:12;:21::i;:::-;3616:28;;3497:154;;;:::o;3313:262:13:-;3422:4;3527:9;:31;3545:11;3537:20;;;;;;;;:::i;:::-;;3527:31;;;;;;;;;;;:41;3559:8;3527:41;;;;;;;;;;;;;;;;;;;;;3520:48;;3313:262;;;;:::o;3323:113:1:-;3394:35;3403:2;3407:7;3416:12;:10;:12::i;:::-;3394:8;:35::i;:::-;3323:113;;:::o;4143:578::-;4251:1;4237:16;;:2;:16;;;4233:87;;4306:1;4276:33;;;;;;;;;;;:::i;:::-;;;;;;;;4233:87;4538:21;4562:34;4570:2;4574:7;4583:12;:10;:12::i;:::-;4562:7;:34::i;:::-;4538:58;;4627:4;4610:21;;:13;:21;;;4606:109;;4675:4;4681:7;4690:13;4654:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;4606:109;4223:498;4143:578;;;:::o;4787:132::-;4873:39;4890:4;4896:2;4900:7;4873:39;;;;;;;;;;;;:16;:39::i;:::-;4787:132;;;:::o;2185:118::-;2248:7;2274:22;2288:7;2274:13;:22::i;:::-;2267:29;;2185:118;;;:::o;1920:208::-;1983:7;2023:1;2006:19;;:5;:19;;;2002:87;;2075:1;2048:30;;;;;;;;;;;:::i;:::-;;;;;;;;2002:87;2105:9;:16;2115:5;2105:16;;;;;;;;;;;;;;;;2098:23;;1920:208;;;:::o;2518:93::-;2565:13;2597:7;2590:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2518:93;:::o;3718:144::-;3803:52;3822:12;:10;:12::i;:::-;3836:8;3846;3803:18;:52::i;:::-;3718:144;;:::o;4985:208::-;5098:31;5111:4;5117:2;5121:7;5098:12;:31::i;:::-;5139:47;5162:4;5168:2;5172:7;5181:4;5139:22;:47::i;:::-;4985:208;;;;:::o;2677:255::-;2741:13;2766:22;2780:7;2766:13;:22::i;:::-;;2799:21;2823:10;:8;:10::i;:::-;2799:34;;2874:1;2856:7;2850:21;:25;:75;;;;;;;;;;;;;;;;;2892:7;2901:18;:7;:16;:18::i;:::-;2878:42;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2850:75;2843:82;;;2677:255;;;:::o;700:51:13:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;894:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3928:153:1:-;4016:4;4039:18;:25;4058:5;4039:25;;;;;;;;;;;;;;;:35;4065:8;4039:35;;;;;;;;;;;;;;;;;;;;;;;;;4032:42;;3928:153;;;;:::o;1662:1240:13:-;1892:8;1879:9;:21;1871:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1984:15;1965:16;:34;1944:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;2075:21;2099:12;;:14;;;;;;;;;:::i;:::-;;;;;2075:38;;2123:20;2146:10;2123:33;;2235:38;2245:12;2259:13;2235:9;:38::i;:::-;2310:300;;;;;;;;2354:12;2310:300;;;;;;2392:11;2310:300;;;;;;;;:::i;:::-;;;;;;2433:15;2310:300;;;;2478:15;2310:300;;;;2516:8;2310:300;;;;2555:16;2310:300;;;;2595:4;2310:300;;;;;2284:8;:23;2293:13;2284:23;;;;;;;;;;;:326;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2717:4;2666:9;:31;2684:11;2676:20;;;;;;;;:::i;:::-;;2666:31;;;;;;;;;;;:48;2698:15;2666:48;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;2841:15;2790:12;2737:158;;2763:13;2737:158;2816:11;2870:15;2737:158;;;;;;;:::i;:::-;;;;;;;;1861:1041;;1662:1240;;;;;:::o;762:146:7:-;838:4;876:25;861:40;;;:11;:40;;;;854:47;;762:146;;;:::o;16138:241:1:-;16201:7;16220:13;16236:17;16245:7;16236:8;:17::i;:::-;16220:33;;16284:1;16267:19;;:5;:19;;;16263:88;;16332:7;16309:31;;;;;;;;;;;:::i;:::-;;;;;;;;16263:88;16367:5;16360:12;;;16138:241;;;:::o;5938:127::-;6008:7;6034:15;:24;6050:7;6034:24;;;;;;;;;;;;;;;;;;;;;6027:31;;5938:127;;;:::o;656:96:5:-;709:7;735:10;728:17;;656:96;:::o;14418:120:1:-;14498:33;14507:2;14511:7;14520:4;14526;14498:8;:33::i;:::-;14418:120;;;:::o;8838:795::-;8924:7;8943:12;8958:17;8967:7;8958:8;:17::i;:::-;8943:32;;9051:1;9035:18;;:4;:18;;;9031:86;;9069:37;9086:4;9092;9098:7;9069:16;:37::i;:::-;9031:86;9177:1;9161:18;;:4;:18;;;9157:256;;9277:48;9294:1;9298:7;9315:1;9319:5;9277:8;:48::i;:::-;9387:1;9368:9;:15;9378:4;9368:15;;;;;;;;;;;;;;;;:20;;;;;;;;;;;9157:256;9441:1;9427:16;;:2;:16;;;9423:107;;9504:1;9487:9;:13;9497:2;9487:13;;;;;;;;;;;;;;;;:18;;;;;;;;;;;9423:107;9559:2;9540:7;:16;9548:7;9540:16;;;;;;;;;;;;:21;;;;;;;;;;;;;;;;;;9596:7;9592:2;9577:27;;9586:4;9577:27;;;;;;;;;;;;9622:4;9615:11;;;8838:795;;;;;:::o;15591:312::-;15718:1;15698:22;;:8;:22;;;15694:91;;15765:8;15743:31;;;;;;;;;;;:::i;:::-;;;;;;;;15694:91;15832:8;15794:18;:25;15813:5;15794:25;;;;;;;;;;;;;;;:35;15820:8;15794:35;;;;;;;;;;;;;;;;:46;;;;;;;;;;;;;;;;;;15877:8;15855:41;;15870:5;15855:41;;;15887:8;15855:41;;;;;;:::i;:::-;;;;;;;;15591:312;;;:::o;16918:782::-;17051:1;17034:2;:14;;;:18;17030:664;;;17088:2;17072:36;;;17109:12;:10;:12::i;:::-;17123:4;17129:7;17138:4;17072:71;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;17068:616;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17398:1;17381:6;:13;:18;17377:293;;17452:2;17430:25;;;;;;;;;;;:::i;:::-;;;;;;;;17377:293;17622:6;17616:13;17607:6;17603:2;17599:15;17592:38;17068:616;17200:41;;;17190:51;;;:6;:51;;;;17186:130;;17294:2;17272:25;;;;;;;;;;;:::i;:::-;;;;;;;;17186:130;17144:186;17030:664;16918:782;;;;:::o;3174:92::-;3225:13;3250:9;;;;;;;;;;;;;;3174:92;:::o;637:698:6:-;693:13;742:14;779:1;759:17;770:5;759:10;:17::i;:::-;:21;742:38;;794:20;828:6;817:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;794:41;;849:11;975:6;971:2;967:15;959:6;955:28;948:35;;1010:282;1017:4;1010:282;;;1041:5;;;;;;;;1180:10;1175:2;1168:5;1164:14;1159:32;1154:3;1146:46;1236:2;1227:11;;;;;;:::i;:::-;;;;;1269:1;1260:5;:10;1010:282;1256:21;1010:282;1312:6;1305:13;;;;;637:698;;;:::o;10633:100:1:-;10700:26;10710:2;10714:7;10700:26;;;;;;;;;;;;:9;:26::i;:::-;10633:100;;:::o;5707:115::-;5773:7;5799;:16;5807:7;5799:16;;;;;;;;;;;;;;;;;;;;;5792:23;;5707:115;;;:::o;14720:662::-;14880:9;:31;;;;14909:1;14893:18;;:4;:18;;;;14880:31;14876:460;;;14927:13;14943:22;14957:7;14943:13;:22::i;:::-;14927:38;;15109:1;15093:18;;:4;:18;;;;:35;;;;;15124:4;15115:13;;:5;:13;;;;15093:35;:69;;;;;15133:29;15150:5;15157:4;15133:16;:29::i;:::-;15132:30;15093:69;15089:142;;;15211:4;15189:27;;;;;;;;;;;:::i;:::-;;;;;;;;15089:142;15249:9;15245:81;;;15303:7;15299:2;15283:28;;15292:5;15283:28;;;;;;;;;;;;15245:81;14913:423;14876:460;15373:2;15346:15;:24;15362:7;15346:24;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;14720:662;;;;:::o;7082:368::-;7194:38;7208:5;7215:7;7224;7194:13;:38::i;:::-;7189:255;;7269:1;7252:19;;:5;:19;;;7248:186;;7321:7;7298:31;;;;;;;;;;;:::i;:::-;;;;;;;;7248:186;7402:7;7411;7375:44;;;;;;;;;;;;:::i;:::-;;;;;;;;7189:255;7082:368;;;:::o;12214:916:9:-;12267:7;12286:14;12303:1;12286:18;;12351:8;12342:5;:17;12338:103;;12388:8;12379:17;;;;;;:::i;:::-;;;;;12424:2;12414:12;;;;12338:103;12467:8;12458:5;:17;12454:103;;12504:8;12495:17;;;;;;:::i;:::-;;;;;12540:2;12530:12;;;;12454:103;12583:8;12574:5;:17;12570:103;;12620:8;12611:17;;;;;;:::i;:::-;;;;;12656:2;12646:12;;;;12570:103;12699:7;12690:5;:16;12686:100;;12735:7;12726:16;;;;;;:::i;:::-;;;;;12770:1;12760:11;;;;12686:100;12812:7;12803:5;:16;12799:100;;12848:7;12839:16;;;;;;:::i;:::-;;;;;12883:1;12873:11;;;;12799:100;12925:7;12916:5;:16;12912:100;;12961:7;12952:16;;;;;;:::i;:::-;;;;;12996:1;12986:11;;;;12912:100;13038:7;13029:5;:16;13025:66;;13075:1;13065:11;;;;13025:66;13117:6;13110:13;;;12214:916;;;:::o;10954:182:1:-;11048:18;11054:2;11058:7;11048:5;:18::i;:::-;11076:53;11107:1;11111:2;11115:7;11124:4;11076:22;:53::i;:::-;10954:182;;;:::o;6376:272::-;6479:4;6533:1;6514:21;;:7;:21;;;;:127;;;;;6561:7;6552:16;;:5;:16;;;:52;;;;6572:32;6589:5;6596:7;6572:16;:32::i;:::-;6552:52;:88;;;;6633:7;6608:32;;:21;6621:7;6608:12;:21::i;:::-;:32;;;6552:88;6514:127;6495:146;;6376:272;;;;;:::o;9955:327::-;10036:1;10022:16;;:2;:16;;;10018:87;;10091:1;10061:33;;;;;;;;;;;:::i;:::-;;;;;;;;10018:87;10114:21;10138:32;10146:2;10150:7;10167:1;10138:7;:32::i;:::-;10114:56;;10209:1;10184:27;;:13;:27;;;10180:96;;10262:1;10234:31;;;;;;;;;;;:::i;:::-;;;;;;;;10180:96;10008:274;9955:327;;:::o;7:75:16:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:99::-;1570:6;1604:5;1598:12;1588:22;;1518:99;;;:::o;1623:169::-;1707:11;1741:6;1736:3;1729:19;1781:4;1776:3;1772:14;1757:29;;1623:169;;;;:::o;1798:139::-;1887:6;1882:3;1877;1871:23;1928:1;1919:6;1914:3;1910:16;1903:27;1798:139;;;:::o;1943:102::-;1984:6;2035:2;2031:7;2026:2;2019:5;2015:14;2011:28;2001:38;;1943:102;;;:::o;2051:377::-;2139:3;2167:39;2200:5;2167:39;:::i;:::-;2222:71;2286:6;2281:3;2222:71;:::i;:::-;2215:78;;2302:65;2360:6;2355:3;2348:4;2341:5;2337:16;2302:65;:::i;:::-;2392:29;2414:6;2392:29;:::i;:::-;2387:3;2383:39;2376:46;;2143:285;2051:377;;;;:::o;2434:313::-;2547:4;2585:2;2574:9;2570:18;2562:26;;2634:9;2628:4;2624:20;2620:1;2609:9;2605:17;2598:47;2662:78;2735:4;2726:6;2662:78;:::i;:::-;2654:86;;2434:313;;;;:::o;2753:77::-;2790:7;2819:5;2808:16;;2753:77;;;:::o;2836:122::-;2909:24;2927:5;2909:24;:::i;:::-;2902:5;2899:35;2889:63;;2948:1;2945;2938:12;2889:63;2836:122;:::o;2964:139::-;3010:5;3048:6;3035:20;3026:29;;3064:33;3091:5;3064:33;:::i;:::-;2964:139;;;;:::o;3109:329::-;3168:6;3217:2;3205:9;3196:7;3192:23;3188:32;3185:119;;;3223:79;;:::i;:::-;3185:119;3343:1;3368:53;3413:7;3404:6;3393:9;3389:22;3368:53;:::i;:::-;3358:63;;3314:117;3109:329;;;;:::o;3444:126::-;3481:7;3521:42;3514:5;3510:54;3499:65;;3444:126;;;:::o;3576:96::-;3613:7;3642:24;3660:5;3642:24;:::i;:::-;3631:35;;3576:96;;;:::o;3678:118::-;3765:24;3783:5;3765:24;:::i;:::-;3760:3;3753:37;3678:118;;:::o;3802:222::-;3895:4;3933:2;3922:9;3918:18;3910:26;;3946:71;4014:1;4003:9;3999:17;3990:6;3946:71;:::i;:::-;3802:222;;;;:::o;4030:114::-;4118:1;4111:5;4108:12;4098:40;;4134:1;4131;4124:12;4098:40;4030:114;:::o;4150:169::-;4211:5;4249:6;4236:20;4227:29;;4265:48;4307:5;4265:48;:::i;:::-;4150:169;;;;:::o;4325:504::-;4408:6;4416;4465:2;4453:9;4444:7;4440:23;4436:32;4433:119;;;4471:79;;:::i;:::-;4433:119;4591:1;4616:68;4676:7;4667:6;4656:9;4652:22;4616:68;:::i;:::-;4606:78;;4562:132;4733:2;4759:53;4804:7;4795:6;4784:9;4780:22;4759:53;:::i;:::-;4749:63;;4704:118;4325:504;;;;;:::o;4835:122::-;4908:24;4926:5;4908:24;:::i;:::-;4901:5;4898:35;4888:63;;4947:1;4944;4937:12;4888:63;4835:122;:::o;4963:139::-;5009:5;5047:6;5034:20;5025:29;;5063:33;5090:5;5063:33;:::i;:::-;4963:139;;;;:::o;5108:474::-;5176:6;5184;5233:2;5221:9;5212:7;5208:23;5204:32;5201:119;;;5239:79;;:::i;:::-;5201:119;5359:1;5384:53;5429:7;5420:6;5409:9;5405:22;5384:53;:::i;:::-;5374:63;;5330:117;5486:2;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5457:118;5108:474;;;;;:::o;5588:619::-;5665:6;5673;5681;5730:2;5718:9;5709:7;5705:23;5701:32;5698:119;;;5736:79;;:::i;:::-;5698:119;5856:1;5881:53;5926:7;5917:6;5906:9;5902:22;5881:53;:::i;:::-;5871:63;;5827:117;5983:2;6009:53;6054:7;6045:6;6034:9;6030:22;6009:53;:::i;:::-;5999:63;;5954:118;6111:2;6137:53;6182:7;6173:6;6162:9;6158:22;6137:53;:::i;:::-;6127:63;;6082:118;5588:619;;;;;:::o;6213:329::-;6272:6;6321:2;6309:9;6300:7;6296:23;6292:32;6289:119;;;6327:79;;:::i;:::-;6289:119;6447:1;6472:53;6517:7;6508:6;6497:9;6493:22;6472:53;:::i;:::-;6462:63;;6418:117;6213:329;;;;:::o;6548:118::-;6635:24;6653:5;6635:24;:::i;:::-;6630:3;6623:37;6548:118;;:::o;6672:222::-;6765:4;6803:2;6792:9;6788:18;6780:26;;6816:71;6884:1;6873:9;6869:17;6860:6;6816:71;:::i;:::-;6672:222;;;;:::o;6900:116::-;6970:21;6985:5;6970:21;:::i;:::-;6963:5;6960:32;6950:60;;7006:1;7003;6996:12;6950:60;6900:116;:::o;7022:133::-;7065:5;7103:6;7090:20;7081:29;;7119:30;7143:5;7119:30;:::i;:::-;7022:133;;;;:::o;7161:468::-;7226:6;7234;7283:2;7271:9;7262:7;7258:23;7254:32;7251:119;;;7289:79;;:::i;:::-;7251:119;7409:1;7434:53;7479:7;7470:6;7459:9;7455:22;7434:53;:::i;:::-;7424:63;;7380:117;7536:2;7562:50;7604:7;7595:6;7584:9;7580:22;7562:50;:::i;:::-;7552:60;;7507:115;7161:468;;;;;:::o;7635:117::-;7744:1;7741;7734:12;7758:117;7867:1;7864;7857:12;7881:180;7929:77;7926:1;7919:88;8026:4;8023:1;8016:15;8050:4;8047:1;8040:15;8067:281;8150:27;8172:4;8150:27;:::i;:::-;8142:6;8138:40;8280:6;8268:10;8265:22;8244:18;8232:10;8229:34;8226:62;8223:88;;;8291:18;;:::i;:::-;8223:88;8331:10;8327:2;8320:22;8110:238;8067:281;;:::o;8354:129::-;8388:6;8415:20;;:::i;:::-;8405:30;;8444:33;8472:4;8464:6;8444:33;:::i;:::-;8354:129;;;:::o;8489:307::-;8550:4;8640:18;8632:6;8629:30;8626:56;;;8662:18;;:::i;:::-;8626:56;8700:29;8722:6;8700:29;:::i;:::-;8692:37;;8784:4;8778;8774:15;8766:23;;8489:307;;;:::o;8802:148::-;8900:6;8895:3;8890;8877:30;8941:1;8932:6;8927:3;8923:16;8916:27;8802:148;;;:::o;8956:423::-;9033:5;9058:65;9074:48;9115:6;9074:48;:::i;:::-;9058:65;:::i;:::-;9049:74;;9146:6;9139:5;9132:21;9184:4;9177:5;9173:16;9222:3;9213:6;9208:3;9204:16;9201:25;9198:112;;;9229:79;;:::i;:::-;9198:112;9319:54;9366:6;9361:3;9356;9319:54;:::i;:::-;9039:340;8956:423;;;;;:::o;9398:338::-;9453:5;9502:3;9495:4;9487:6;9483:17;9479:27;9469:122;;9510:79;;:::i;:::-;9469:122;9627:6;9614:20;9652:78;9726:3;9718:6;9711:4;9703:6;9699:17;9652:78;:::i;:::-;9643:87;;9459:277;9398:338;;;;:::o;9742:943::-;9837:6;9845;9853;9861;9910:3;9898:9;9889:7;9885:23;9881:33;9878:120;;;9917:79;;:::i;:::-;9878:120;10037:1;10062:53;10107:7;10098:6;10087:9;10083:22;10062:53;:::i;:::-;10052:63;;10008:117;10164:2;10190:53;10235:7;10226:6;10215:9;10211:22;10190:53;:::i;:::-;10180:63;;10135:118;10292:2;10318:53;10363:7;10354:6;10343:9;10339:22;10318:53;:::i;:::-;10308:63;;10263:118;10448:2;10437:9;10433:18;10420:32;10479:18;10471:6;10468:30;10465:117;;;10501:79;;:::i;:::-;10465:117;10606:62;10660:7;10651:6;10640:9;10636:22;10606:62;:::i;:::-;10596:72;;10391:287;9742:943;;;;;;;:::o;10691:180::-;10739:77;10736:1;10729:88;10836:4;10833:1;10826:15;10860:4;10857:1;10850:15;10877:120;10965:1;10958:5;10955:12;10945:46;;10971:18;;:::i;:::-;10945:46;10877:120;:::o;11003:141::-;11055:7;11084:5;11073:16;;11090:48;11132:5;11090:48;:::i;:::-;11003:141;;;:::o;11150:::-;11213:9;11246:39;11279:5;11246:39;:::i;:::-;11233:52;;11150:141;;;:::o;11297:157::-;11397:50;11441:5;11397:50;:::i;:::-;11392:3;11385:63;11297:157;;:::o;11460:900::-;11728:4;11766:3;11755:9;11751:19;11743:27;;11780:71;11848:1;11837:9;11833:17;11824:6;11780:71;:::i;:::-;11861:85;11942:2;11931:9;11927:18;11918:6;11861:85;:::i;:::-;11956:72;12024:2;12013:9;12009:18;12000:6;11956:72;:::i;:::-;12038;12106:2;12095:9;12091:18;12082:6;12038:72;:::i;:::-;12120:73;12188:3;12177:9;12173:19;12164:6;12120:73;:::i;:::-;12203;12271:3;12260:9;12256:19;12247:6;12203:73;:::i;:::-;12286:67;12348:3;12337:9;12333:19;12324:6;12286:67;:::i;:::-;11460:900;;;;;;;;;;:::o;12366:474::-;12434:6;12442;12491:2;12479:9;12470:7;12466:23;12462:32;12459:119;;;12497:79;;:::i;:::-;12459:119;12617:1;12642:53;12687:7;12678:6;12667:9;12663:22;12642:53;:::i;:::-;12632:63;;12588:117;12744:2;12770:53;12815:7;12806:6;12795:9;12791:22;12770:53;:::i;:::-;12760:63;;12715:118;12366:474;;;;;:::o;12846:::-;12914:6;12922;12971:2;12959:9;12950:7;12946:23;12942:32;12939:119;;;12977:79;;:::i;:::-;12939:119;13097:1;13122:53;13167:7;13158:6;13147:9;13143:22;13122:53;:::i;:::-;13112:63;;13068:117;13224:2;13250:53;13295:7;13286:6;13275:9;13271:22;13250:53;:::i;:::-;13240:63;;13195:118;12846:474;;;;;:::o;13326:941::-;13436:6;13444;13452;13460;13468;13517:3;13505:9;13496:7;13492:23;13488:33;13485:120;;;13524:79;;:::i;:::-;13485:120;13644:1;13669:68;13729:7;13720:6;13709:9;13705:22;13669:68;:::i;:::-;13659:78;;13615:132;13786:2;13812:53;13857:7;13848:6;13837:9;13833:22;13812:53;:::i;:::-;13802:63;;13757:118;13914:2;13940:53;13985:7;13976:6;13965:9;13961:22;13940:53;:::i;:::-;13930:63;;13885:118;14042:2;14068:53;14113:7;14104:6;14093:9;14089:22;14068:53;:::i;:::-;14058:63;;14013:118;14170:3;14197:53;14242:7;14233:6;14222:9;14218:22;14197:53;:::i;:::-;14187:63;;14141:119;13326:941;;;;;;;;:::o;14273:180::-;14321:77;14318:1;14311:88;14418:4;14415:1;14408:15;14442:4;14439:1;14432:15;14459:320;14503:6;14540:1;14534:4;14530:12;14520:22;;14587:1;14581:4;14577:12;14608:18;14598:81;;14664:4;14656:6;14652:17;14642:27;;14598:81;14726:2;14718:6;14715:14;14695:18;14692:38;14689:84;;14745:18;;:::i;:::-;14689:84;14510:269;14459:320;;;:::o;14785:442::-;14934:4;14972:2;14961:9;14957:18;14949:26;;14985:71;15053:1;15042:9;15038:17;15029:6;14985:71;:::i;:::-;15066:72;15134:2;15123:9;15119:18;15110:6;15066:72;:::i;:::-;15148;15216:2;15205:9;15201:18;15192:6;15148:72;:::i;:::-;14785:442;;;;;;:::o;15233:148::-;15335:11;15372:3;15357:18;;15233:148;;;;:::o;15387:390::-;15493:3;15521:39;15554:5;15521:39;:::i;:::-;15576:89;15658:6;15653:3;15576:89;:::i;:::-;15569:96;;15674:65;15732:6;15727:3;15720:4;15713:5;15709:16;15674:65;:::i;:::-;15764:6;15759:3;15755:16;15748:23;;15497:280;15387:390;;;;:::o;15783:435::-;15963:3;15985:95;16076:3;16067:6;15985:95;:::i;:::-;15978:102;;16097:95;16188:3;16179:6;16097:95;:::i;:::-;16090:102;;16209:3;16202:10;;15783:435;;;;;:::o;16224:179::-;16364:31;16360:1;16352:6;16348:14;16341:55;16224:179;:::o;16409:366::-;16551:3;16572:67;16636:2;16631:3;16572:67;:::i;:::-;16565:74;;16648:93;16737:3;16648:93;:::i;:::-;16766:2;16761:3;16757:12;16750:19;;16409:366;;;:::o;16781:419::-;16947:4;16985:2;16974:9;16970:18;16962:26;;17034:9;17028:4;17024:20;17020:1;17009:9;17005:17;16998:47;17062:131;17188:4;17062:131;:::i;:::-;17054:139;;16781:419;;;:::o;17206:226::-;17346:34;17342:1;17334:6;17330:14;17323:58;17415:9;17410:2;17402:6;17398:15;17391:34;17206:226;:::o;17438:366::-;17580:3;17601:67;17665:2;17660:3;17601:67;:::i;:::-;17594:74;;17677:93;17766:3;17677:93;:::i;:::-;17795:2;17790:3;17786:12;17779:19;;17438:366;;;:::o;17810:419::-;17976:4;18014:2;18003:9;17999:18;17991:26;;18063:9;18057:4;18053:20;18049:1;18038:9;18034:17;18027:47;18091:131;18217:4;18091:131;:::i;:::-;18083:139;;17810:419;;;:::o;18235:180::-;18283:77;18280:1;18273:88;18380:4;18377:1;18370:15;18404:4;18401:1;18394:15;18421:233;18460:3;18483:24;18501:5;18483:24;:::i;:::-;18474:33;;18529:66;18522:5;18519:77;18516:103;;18599:18;;:::i;:::-;18516:103;18646:1;18639:5;18635:13;18628:20;;18421:233;;;:::o;18660:358::-;18794:4;18832:2;18821:9;18817:18;18809:26;;18845:84;18926:1;18915:9;18911:17;18902:6;18845:84;:::i;:::-;18939:72;19007:2;18996:9;18992:18;18983:6;18939:72;:::i;:::-;18660:358;;;;;:::o;19024:98::-;19075:6;19109:5;19103:12;19093:22;;19024:98;;;:::o;19128:168::-;19211:11;19245:6;19240:3;19233:19;19285:4;19280:3;19276:14;19261:29;;19128:168;;;;:::o;19302:373::-;19388:3;19416:38;19448:5;19416:38;:::i;:::-;19470:70;19533:6;19528:3;19470:70;:::i;:::-;19463:77;;19549:65;19607:6;19602:3;19595:4;19588:5;19584:16;19549:65;:::i;:::-;19639:29;19661:6;19639:29;:::i;:::-;19634:3;19630:39;19623:46;;19392:283;19302:373;;;;:::o;19681:640::-;19876:4;19914:3;19903:9;19899:19;19891:27;;19928:71;19996:1;19985:9;19981:17;19972:6;19928:71;:::i;:::-;20009:72;20077:2;20066:9;20062:18;20053:6;20009:72;:::i;:::-;20091;20159:2;20148:9;20144:18;20135:6;20091:72;:::i;:::-;20210:9;20204:4;20200:20;20195:2;20184:9;20180:18;20173:48;20238:76;20309:4;20300:6;20238:76;:::i;:::-;20230:84;;19681:640;;;;;;;:::o;20327:141::-;20383:5;20414:6;20408:13;20399:22;;20430:32;20456:5;20430:32;:::i;:::-;20327:141;;;;:::o;20474:349::-;20543:6;20592:2;20580:9;20571:7;20567:23;20563:32;20560:119;;;20598:79;;:::i;:::-;20560:119;20718:1;20743:63;20798:7;20789:6;20778:9;20774:22;20743:63;:::i;:::-;20733:73;;20689:127;20474:349;;;;:::o;20829:180::-;20877:77;20874:1;20867:88;20974:4;20971:1;20964:15;20998:4;20995:1;20988:15;21015:332;21136:4;21174:2;21163:9;21159:18;21151:26;;21187:71;21255:1;21244:9;21240:17;21231:6;21187:71;:::i;:::-;21268:72;21336:2;21325:9;21321:18;21312:6;21268:72;:::i;:::-;21015:332;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "checkInsurance(uint8,uint256)": "094815ef",
    "getApproved(uint256)": "081812fc",
    "isApprovedForAll(address,address)": "e985e9c5",
    "isInsured(uint256,uint256)": "e19cdacd",
    "mintPolicy(uint8,uint256,uint256,uint256,uint256)": "fb7f2312",
    "name()": "06fdde03",
    "ownerOf(uint256)": "6352211e",
    "policies(uint256)": "d3e89483",
    "safeTransferFrom(address,address,uint256)": "42842e0e",
    "safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
    "setApprovalForAll(address,bool)": "a22cb465",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "tokenURI(uint256)": "c87b56dd",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyTokenId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policyHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum InsurancePolicyNFT.PolicyType\",\"name\":\"policyType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"insuredTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"}],\"name\":\"PolicyMinted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum InsurancePolicyNFT.PolicyType\",\"name\":\"_policyType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"checkInsurance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isInsured\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum InsurancePolicyNFT.PolicyType\",\"name\":\"_policyType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_insuredTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiryTimestamp\",\"type\":\"uint256\"}],\"name\":\"mintPolicy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"policies\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"policyHolder\",\"type\":\"address\"},{\"internalType\":\"enum InsurancePolicyNFT.PolicyType\",\"name\":\"policyType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"insuredTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Manages insurance policies for vessel and cargo NFTs by minting policy NFTs.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"See {IERC721-approve}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC721-balanceOf}.\"},\"checkInsurance(uint8,uint256)\":{\"details\":\"Public view function to verify if an asset has an active insurance policy. The existence of this flag is a convenience and performance optimization for the Brokerage contract.\",\"params\":{\"_policyType\":\"The type of asset to check (Vessel or Cargo).\",\"_tokenId\":\"The token ID of the asset.\"},\"returns\":{\"_0\":\"A boolean indicating if the entity is currently insured.\"}},\"getApproved(uint256)\":{\"details\":\"See {IERC721-getApproved}.\"},\"isApprovedForAll(address,address)\":{\"details\":\"See {IERC721-isApprovedForAll}.\"},\"mintPolicy(uint8,uint256,uint256,uint256,uint256)\":{\"details\":\"Mints a new insurance policy NFT.\",\"params\":{\"_coverageAmount\":\"The value of the coverage.\",\"_expiryTimestamp\":\"When the policy expires.\",\"_insuredTokenId\":\"The token ID of the vessel or cargo NFT being insured.\",\"_policyType\":\"Whether the policy covers a Vessel or Cargo.\",\"_premium\":\"The cost of the policy, paid upfront.\"}},\"name()\":{\"details\":\"See {IERC721Metadata-name}.\"},\"ownerOf(uint256)\":{\"details\":\"See {IERC721-ownerOf}.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"See {IERC721-safeTransferFrom}.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"See {IERC721-setApprovalForAll}.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"symbol()\":{\"details\":\"See {IERC721Metadata-symbol}.\"},\"tokenURI(uint256)\":{\"details\":\"See {IERC721Metadata-tokenURI}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC721-transferFrom}.\"}},\"title\":\"InsurancePolicyNFT\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/InsurancePolicyNFT.sol\":\"InsurancePolicyNFT\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol\":{\"keccak256\":\"0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd\",\"dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7\",\"dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22\",\"dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i\"]},\"lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol\":{\"keccak256\":\"0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02\",\"dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453\",\"dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8\",\"dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc\",\"dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT\"]},\"src/InsurancePolicyNFT.sol\":{\"keccak256\":\"0xca9b613c239afed404d47fb7628d0a00e1104dc64ebb0d85d4c5cf6cdc6627bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f48f276dd2542e6593aa5a94f3eb4be0d8a10511f1be58bf4d73eae6e11ae9ee\",\"dweb:/ipfs/QmSRzQF5fNFR7ZH2gyEDteRFqMbVMaHnpzJYCWVZC41Qqu\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.26+commit.8a97fa7a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721IncorrectOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC721InsufficientApproval"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "approver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidApprover"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidOperator"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "receiver",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidReceiver"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC721InvalidSender"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "ERC721NonexistentToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "approved",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ApprovalForAll",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "policyTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "policyHolder",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum InsurancePolicyNFT.PolicyType",
              "name": "policyType",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "insuredTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "coverageAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PolicyMinted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum InsurancePolicyNFT.PolicyType",
              "name": "_policyType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkInsurance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getApproved",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isApprovedForAll",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInsured",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "enum InsurancePolicyNFT.PolicyType",
              "name": "_policyType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "_insuredTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_coverageAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_premium",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_expiryTimestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "mintPolicy"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "ownerOf",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "policies",
          "outputs": [
            {
              "internalType": "address",
              "name": "policyHolder",
              "type": "address"
            },
            {
              "internalType": "enum InsurancePolicyNFT.PolicyType",
              "name": "policyType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "insuredTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "coverageAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "premium",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiryTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "safeTransferFrom"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "operator",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "approved",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setApprovalForAll"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "tokenURI",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "approve(address,uint256)": {
            "details": "See {IERC721-approve}."
          },
          "balanceOf(address)": {
            "details": "See {IERC721-balanceOf}."
          },
          "checkInsurance(uint8,uint256)": {
            "details": "Public view function to verify if an asset has an active insurance policy. The existence of this flag is a convenience and performance optimization for the Brokerage contract.",
            "params": {
              "_policyType": "The type of asset to check (Vessel or Cargo).",
              "_tokenId": "The token ID of the asset."
            },
            "returns": {
              "_0": "A boolean indicating if the entity is currently insured."
            }
          },
          "getApproved(uint256)": {
            "details": "See {IERC721-getApproved}."
          },
          "isApprovedForAll(address,address)": {
            "details": "See {IERC721-isApprovedForAll}."
          },
          "mintPolicy(uint8,uint256,uint256,uint256,uint256)": {
            "details": "Mints a new insurance policy NFT.",
            "params": {
              "_coverageAmount": "The value of the coverage.",
              "_expiryTimestamp": "When the policy expires.",
              "_insuredTokenId": "The token ID of the vessel or cargo NFT being insured.",
              "_policyType": "Whether the policy covers a Vessel or Cargo.",
              "_premium": "The cost of the policy, paid upfront."
            }
          },
          "name()": {
            "details": "See {IERC721Metadata-name}."
          },
          "ownerOf(uint256)": {
            "details": "See {IERC721-ownerOf}."
          },
          "safeTransferFrom(address,address,uint256)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "safeTransferFrom(address,address,uint256,bytes)": {
            "details": "See {IERC721-safeTransferFrom}."
          },
          "setApprovalForAll(address,bool)": {
            "details": "See {IERC721-setApprovalForAll}."
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          },
          "symbol()": {
            "details": "See {IERC721Metadata-symbol}."
          },
          "tokenURI(uint256)": {
            "details": "See {IERC721Metadata-tokenURI}."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC721-transferFrom}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/InsurancePolicyNFT.sol": "InsurancePolicyNFT"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/ERC721.sol": {
        "keccak256": "0x13dd061770956c8489b80cfc89d9cdfc8ea2783d953691ea037a380731d52784",
        "urls": [
          "bzz-raw://ed37f0f86e7fe31659e48c3a2a5920a92dd7f13c85cf8991fb79fe5f01e08efd",
          "dweb:/ipfs/QmUtm9bQGvjr9hHGwkPWrbgFmVqzaJcxjkaYDex2oGsonS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0x5ef46daa3b58ef2702279d514780316efaa952915ee1aa3396f041ee2982b0b4",
        "urls": [
          "bzz-raw://2f8f2a76e23b02fc69e8cd24c3cb47da6c7af3a2d6c3a382f8ac25c6e094ade7",
          "dweb:/ipfs/QmPV4ZS4tPVv4mTCf9ejyZ1ai57EEibDRj7mN2ARDCLV5n"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/IERC721Receiver.sol": {
        "keccak256": "0x7f7a26306c79a65fb8b3b6c757cd74660c532cd8a02e165488e30027dd34ca49",
        "urls": [
          "bzz-raw://d01e0b2b837ee2f628545e54d8715b49c7ef2befd08356c2e7f6c50dde8a1c22",
          "dweb:/ipfs/QmWBAn6y2D1xgftci97Z3qR9tQnkvwQpYwFwkTvDMvqU4i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC721/extensions/IERC721Metadata.sol": {
        "keccak256": "0x37d1aaaa5a2908a09e9dcf56a26ddf762ecf295afb5964695937344fc6802ce1",
        "urls": [
          "bzz-raw://ed0bfc1b92153c5000e50f4021367b931bbe96372ac6facec3c4961b72053d02",
          "dweb:/ipfs/Qmbwp8VDerjS5SV1quwHH1oMXxPQ93fzfLVqJ2RCqbowGE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0x55f102ea785d8399c0e58d1108e2d289506dde18abc6db1b7f68c1f9f9bc5792",
        "urls": [
          "bzz-raw://6e52e0a7765c943ef14e5bcf11e46e6139fa044be564881378349236bf2e3453",
          "dweb:/ipfs/QmZEeeXoFPW47amyP35gfzomF9DixqqTEPwzBakv6cZw6i"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165.sol": {
        "keccak256": "0x9e8778b14317ba9e256c30a76fd6c32b960af621987f56069e1e819c77c6a133",
        "urls": [
          "bzz-raw://1777404f1dcd0fac188e55a288724ec3c67b45288e49cc64723e95e702b49ab8",
          "dweb:/ipfs/QmZFdC626GButBApwDUvvTnUzdinevC3B24d7yyh57XkiA"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b",
        "urls": [
          "bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df",
          "dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d",
        "urls": [
          "bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875",
          "dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0x5f7e4076e175393767754387c962926577f1660dd9b810187b9002407656be72",
        "urls": [
          "bzz-raw://7d533a1c97cd43a57cd9c465f7ee8dd0e39ae93a8fb8ff8e5303a356b081cdcc",
          "dweb:/ipfs/QmVBEei6aTnvYNZp2CHYVNKyZS4q1KkjANfY39WVXZXVoT"
        ],
        "license": "MIT"
      },
      "src/InsurancePolicyNFT.sol": {
        "keccak256": "0xca9b613c239afed404d47fb7628d0a00e1104dc64ebb0d85d4c5cf6cdc6627bd",
        "urls": [
          "bzz-raw://f48f276dd2542e6593aa5a94f3eb4be0d8a10511f1be58bf4d73eae6e11ae9ee",
          "dweb:/ipfs/QmSRzQF5fNFR7ZH2gyEDteRFqMbVMaHnpzJYCWVZC41Qqu"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 13
}