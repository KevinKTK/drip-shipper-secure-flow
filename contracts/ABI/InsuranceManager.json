{
  "abi": [
    {
      "type": "function",
      "name": "checkInsurance",
      "inputs": [
        {
          "name": "_policyType",
          "type": "uint8",
          "internalType": "enum InsuranceManager.PolicyType"
        },
        {
          "name": "_tokenId",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "isInsured",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "issuePolicy",
      "inputs": [
        {
          "name": "_policyHolder",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_policyType",
          "type": "uint8",
          "internalType": "enum InsuranceManager.PolicyType"
        },
        {
          "name": "_insuredTokenId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_coverageAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_premium",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_expiryTimestamp",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "policies",
      "inputs": [
        {
          "name": "",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [
        {
          "name": "policyId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "policyHolder",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "policyType",
          "type": "uint8",
          "internalType": "enum InsuranceManager.PolicyType"
        },
        {
          "name": "insuredTokenId",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "coverageAmount",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "premium",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "expiryTimestamp",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "isActive",
          "type": "bool",
          "internalType": "bool"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "PolicyIssued",
      "inputs": [
        {
          "name": "policyId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "policyHolder",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "policyType",
          "type": "uint8",
          "indexed": false,
          "internalType": "enum InsuranceManager.PolicyType"
        },
        {
          "name": "insuredTokenId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "coverageAmount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    }
  ],
  "bytecode": {
    "object": "0x6080604052348015600e575f80fd5b50610a558061001c5f395ff3fe60806040526004361061003e575f3560e01c8063094815ef14610042578063d3e894831461007e578063e19cdacd146100c1578063f618c68a146100fd575b5f80fd5b34801561004d575f80fd5b506100686004803603810190610063919061054c565b610119565b60405161007591906105a4565b60405180910390f35b348015610089575f80fd5b506100a4600480360381019061009f91906105bd565b610161565b6040516100b89897969594939291906106a9565b60405180910390f35b3480156100cc575f80fd5b506100e760048036038101906100e29190610725565b6101dc565b6040516100f491906105a4565b60405180910390f35b6101176004803603810190610112919061078d565b610206565b005b5f60015f8460018111156101305761012f610636565b5b81526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff16905092915050565b5f602052805f5260405f205f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff1690806002015490806003015490806004015490806005015490806006015f9054906101000a900460ff16905088565b6001602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b813414610248576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023f90610870565b60405180910390fd5b42811161028a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610281906108fe565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146102f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ef90610966565b60405180910390fd5b5f60025f81548092919061030b906109b1565b9190505590506040518061010001604052808281526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187600181111561035257610351610636565b5b8152602001868152602001858152602001848152602001838152602001600115158152505f808381526020019081526020015f205f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908360018111156103ff576103fe610636565b5b0217905550606082015181600201556080820151816003015560a0820151816004015560c0820151816005015560e0820151816006015f6101000a81548160ff0219169083151502179055509050506001805f88600181111561046557610464610636565b5b81526020019081526020015f205f8781526020019081526020015f205f6101000a81548160ff021916908315150217905550848773ffffffffffffffffffffffffffffffffffffffff16827fde9514a7184b752a12694183e1fe9978402c994cf3142a51203bfa71408fa54689886040516104e19291906109f8565b60405180910390a450505050505050565b5f80fd5b60028110610502575f80fd5b50565b5f81359050610513816104f6565b92915050565b5f819050919050565b61052b81610519565b8114610535575f80fd5b50565b5f8135905061054681610522565b92915050565b5f8060408385031215610562576105616104f2565b5b5f61056f85828601610505565b925050602061058085828601610538565b9150509250929050565b5f8115159050919050565b61059e8161058a565b82525050565b5f6020820190506105b75f830184610595565b92915050565b5f602082840312156105d2576105d16104f2565b5b5f6105df84828501610538565b91505092915050565b6105f181610519565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610620826105f7565b9050919050565b61063081610616565b82525050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6002811061067457610673610636565b5b50565b5f81905061068482610663565b919050565b5f61069382610677565b9050919050565b6106a381610689565b82525050565b5f610100820190506106bd5f83018b6105e8565b6106ca602083018a610627565b6106d7604083018961069a565b6106e460608301886105e8565b6106f160808301876105e8565b6106fe60a08301866105e8565b61070b60c08301856105e8565b61071860e0830184610595565b9998505050505050505050565b5f806040838503121561073b5761073a6104f2565b5b5f61074885828601610538565b925050602061075985828601610538565b9150509250929050565b61076c81610616565b8114610776575f80fd5b50565b5f8135905061078781610763565b92915050565b5f805f805f8060c087890312156107a7576107a66104f2565b5b5f6107b489828a01610779565b96505060206107c589828a01610505565b95505060406107d689828a01610538565b94505060606107e789828a01610538565b93505060806107f889828a01610538565b92505060a061080989828a01610538565b9150509295509295509295565b5f82825260208201905092915050565b7f494d3a20496e636f7272656374207072656d69756d20706169640000000000005f82015250565b5f61085a601a83610816565b915061086582610826565b602082019050919050565b5f6020820190508181035f8301526108878161084e565b9050919050565b7f494d3a20506f6c696379206d7573742065787069726520696e207468652066755f8201527f7475726500000000000000000000000000000000000000000000000000000000602082015250565b5f6108e8602483610816565b91506108f38261088e565b604082019050919050565b5f6020820190508181035f830152610915816108dc565b9050919050565b7f494d3a2043616c6c6572206d75737420626520706f6c69637920686f6c6465725f82015250565b5f610950602083610816565b915061095b8261091c565b602082019050919050565b5f6020820190508181035f83015261097d81610944565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109bb82610519565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109ed576109ec610984565b5b600182019050919050565b5f604082019050610a0b5f83018561069a565b610a1860208301846105e8565b939250505056fea26469706673582212207e0884492764dc4bcab76bd63eeab0c4ea0f6dad71f9076e2172ed90a8cf77c264736f6c634300081a0033",
    "sourceMap": "237:3080:13:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040526004361061003e575f3560e01c8063094815ef14610042578063d3e894831461007e578063e19cdacd146100c1578063f618c68a146100fd575b5f80fd5b34801561004d575f80fd5b506100686004803603810190610063919061054c565b610119565b60405161007591906105a4565b60405180910390f35b348015610089575f80fd5b506100a4600480360381019061009f91906105bd565b610161565b6040516100b89897969594939291906106a9565b60405180910390f35b3480156100cc575f80fd5b506100e760048036038101906100e29190610725565b6101dc565b6040516100f491906105a4565b60405180910390f35b6101176004803603810190610112919061078d565b610206565b005b5f60015f8460018111156101305761012f610636565b5b81526020019081526020015f205f8381526020019081526020015f205f9054906101000a900460ff16905092915050565b5f602052805f5260405f205f91509050805f015490806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff1690806002015490806003015490806004015490806005015490806006015f9054906101000a900460ff16905088565b6001602052815f5260405f20602052805f5260405f205f915091509054906101000a900460ff1681565b813414610248576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023f90610870565b60405180910390fd5b42811161028a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610281906108fe565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146102f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ef90610966565b60405180910390fd5b5f60025f81548092919061030b906109b1565b9190505590506040518061010001604052808281526020018873ffffffffffffffffffffffffffffffffffffffff16815260200187600181111561035257610351610636565b5b8152602001868152602001858152602001848152602001838152602001600115158152505f808381526020019081526020015f205f820151815f01556020820151816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff021916908360018111156103ff576103fe610636565b5b0217905550606082015181600201556080820151816003015560a0820151816004015560c0820151816005015560e0820151816006015f6101000a81548160ff0219169083151502179055509050506001805f88600181111561046557610464610636565b5b81526020019081526020015f205f8781526020019081526020015f205f6101000a81548160ff021916908315150217905550848773ffffffffffffffffffffffffffffffffffffffff16827fde9514a7184b752a12694183e1fe9978402c994cf3142a51203bfa71408fa54689886040516104e19291906109f8565b60405180910390a450505050505050565b5f80fd5b60028110610502575f80fd5b50565b5f81359050610513816104f6565b92915050565b5f819050919050565b61052b81610519565b8114610535575f80fd5b50565b5f8135905061054681610522565b92915050565b5f8060408385031215610562576105616104f2565b5b5f61056f85828601610505565b925050602061058085828601610538565b9150509250929050565b5f8115159050919050565b61059e8161058a565b82525050565b5f6020820190506105b75f830184610595565b92915050565b5f602082840312156105d2576105d16104f2565b5b5f6105df84828501610538565b91505092915050565b6105f181610519565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610620826105f7565b9050919050565b61063081610616565b82525050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b6002811061067457610673610636565b5b50565b5f81905061068482610663565b919050565b5f61069382610677565b9050919050565b6106a381610689565b82525050565b5f610100820190506106bd5f83018b6105e8565b6106ca602083018a610627565b6106d7604083018961069a565b6106e460608301886105e8565b6106f160808301876105e8565b6106fe60a08301866105e8565b61070b60c08301856105e8565b61071860e0830184610595565b9998505050505050505050565b5f806040838503121561073b5761073a6104f2565b5b5f61074885828601610538565b925050602061075985828601610538565b9150509250929050565b61076c81610616565b8114610776575f80fd5b50565b5f8135905061078781610763565b92915050565b5f805f805f8060c087890312156107a7576107a66104f2565b5b5f6107b489828a01610779565b96505060206107c589828a01610505565b95505060406107d689828a01610538565b94505060606107e789828a01610538565b93505060806107f889828a01610538565b92505060a061080989828a01610538565b9150509295509295509295565b5f82825260208201905092915050565b7f494d3a20496e636f7272656374207072656d69756d20706169640000000000005f82015250565b5f61085a601a83610816565b915061086582610826565b602082019050919050565b5f6020820190508181035f8301526108878161084e565b9050919050565b7f494d3a20506f6c696379206d7573742065787069726520696e207468652066755f8201527f7475726500000000000000000000000000000000000000000000000000000000602082015250565b5f6108e8602483610816565b91506108f38261088e565b604082019050919050565b5f6020820190508181035f830152610915816108dc565b9050919050565b7f494d3a2043616c6c6572206d75737420626520706f6c69637920686f6c6465725f82015250565b5f610950602083610816565b915061095b8261091c565b602082019050919050565b5f6020820190508181035f83015261097d81610944565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6109bb82610519565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109ed576109ec610984565b5b600182019050919050565b5f604082019050610a0b5f83018561069a565b610a1860208301846105e8565b939250505056fea26469706673582212207e0884492764dc4bcab76bd63eeab0c4ea0f6dad71f9076e2172ed90a8cf77c264736f6c634300081a0033",
    "sourceMap": "237:3080:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3135:180;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;683:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;848:61;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1648:1196;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3135:180;3244:4;3267:9;:31;3285:11;3277:20;;;;;;;;:::i;:::-;;3267:31;;;;;;;;;;;:41;3299:8;3267:41;;;;;;;;;;;;;;;;;;;;;3260:48;;3135:180;;;;:::o;683:51::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;848:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1648:1196::-;1910:8;1897:9;:21;1889:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;1999:15;1980:16;:34;1959:117;;;;;;;;;;;;:::i;:::-;;;;;;;;;2124:10;2107:27;;:13;:27;;;2086:106;;;;;;;;;;;;:::i;:::-;;;;;;;;;2203:16;2222:13;;:15;;;;;;;;;:::i;:::-;;;;;2203:34;;2268:333;;;;;;;;2308:8;2268:333;;;;2344:13;2268:333;;;;;;2383:11;2268:333;;;;;;;;:::i;:::-;;;;;;2424:15;2268:333;;;;2469:15;2268:333;;;;2507:8;2268:333;;;;2546:16;2268:333;;;;2586:4;2268:333;;;;;2247:8;:18;2256:8;2247:18;;;;;;;;;;;:354;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2663:4;2612:9;:31;2630:11;2622:20;;;;;;;;:::i;:::-;;2612:31;;;;;;;;;;;:48;2644:15;2612:48;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;2783:15;2731:13;2683:154;;2709:8;2683:154;2758:11;2812:15;2683:154;;;;;;;:::i;:::-;;;;;;;;1879:965;1648:1196;;;;;;:::o;88:117:16:-;197:1;194;187:12;334:114;422:1;415:5;412:12;402:40;;438:1;435;428:12;402:40;334:114;:::o;454:169::-;515:5;553:6;540:20;531:29;;569:48;611:5;569:48;:::i;:::-;454:169;;;;:::o;629:77::-;666:7;695:5;684:16;;629:77;;;:::o;712:122::-;785:24;803:5;785:24;:::i;:::-;778:5;775:35;765:63;;824:1;821;814:12;765:63;712:122;:::o;840:139::-;886:5;924:6;911:20;902:29;;940:33;967:5;940:33;:::i;:::-;840:139;;;;:::o;985:504::-;1068:6;1076;1125:2;1113:9;1104:7;1100:23;1096:32;1093:119;;;1131:79;;:::i;:::-;1093:119;1251:1;1276:68;1336:7;1327:6;1316:9;1312:22;1276:68;:::i;:::-;1266:78;;1222:132;1393:2;1419:53;1464:7;1455:6;1444:9;1440:22;1419:53;:::i;:::-;1409:63;;1364:118;985:504;;;;;:::o;1495:90::-;1529:7;1572:5;1565:13;1558:21;1547:32;;1495:90;;;:::o;1591:109::-;1672:21;1687:5;1672:21;:::i;:::-;1667:3;1660:34;1591:109;;:::o;1706:210::-;1793:4;1831:2;1820:9;1816:18;1808:26;;1844:65;1906:1;1895:9;1891:17;1882:6;1844:65;:::i;:::-;1706:210;;;;:::o;1922:329::-;1981:6;2030:2;2018:9;2009:7;2005:23;2001:32;1998:119;;;2036:79;;:::i;:::-;1998:119;2156:1;2181:53;2226:7;2217:6;2206:9;2202:22;2181:53;:::i;:::-;2171:63;;2127:117;1922:329;;;;:::o;2257:118::-;2344:24;2362:5;2344:24;:::i;:::-;2339:3;2332:37;2257:118;;:::o;2381:126::-;2418:7;2458:42;2451:5;2447:54;2436:65;;2381:126;;;:::o;2513:96::-;2550:7;2579:24;2597:5;2579:24;:::i;:::-;2568:35;;2513:96;;;:::o;2615:118::-;2702:24;2720:5;2702:24;:::i;:::-;2697:3;2690:37;2615:118;;:::o;2739:180::-;2787:77;2784:1;2777:88;2884:4;2881:1;2874:15;2908:4;2905:1;2898:15;2925:120;3013:1;3006:5;3003:12;2993:46;;3019:18;;:::i;:::-;2993:46;2925:120;:::o;3051:141::-;3103:7;3132:5;3121:16;;3138:48;3180:5;3138:48;:::i;:::-;3051:141;;;:::o;3198:::-;3261:9;3294:39;3327:5;3294:39;:::i;:::-;3281:52;;3198:141;;;:::o;3345:157::-;3445:50;3489:5;3445:50;:::i;:::-;3440:3;3433:63;3345:157;;:::o;3508:1011::-;3804:4;3842:3;3831:9;3827:19;3819:27;;3856:71;3924:1;3913:9;3909:17;3900:6;3856:71;:::i;:::-;3937:72;4005:2;3994:9;3990:18;3981:6;3937:72;:::i;:::-;4019:85;4100:2;4089:9;4085:18;4076:6;4019:85;:::i;:::-;4114:72;4182:2;4171:9;4167:18;4158:6;4114:72;:::i;:::-;4196:73;4264:3;4253:9;4249:19;4240:6;4196:73;:::i;:::-;4279;4347:3;4336:9;4332:19;4323:6;4279:73;:::i;:::-;4362;4430:3;4419:9;4415:19;4406:6;4362:73;:::i;:::-;4445:67;4507:3;4496:9;4492:19;4483:6;4445:67;:::i;:::-;3508:1011;;;;;;;;;;;:::o;4525:474::-;4593:6;4601;4650:2;4638:9;4629:7;4625:23;4621:32;4618:119;;;4656:79;;:::i;:::-;4618:119;4776:1;4801:53;4846:7;4837:6;4826:9;4822:22;4801:53;:::i;:::-;4791:63;;4747:117;4903:2;4929:53;4974:7;4965:6;4954:9;4950:22;4929:53;:::i;:::-;4919:63;;4874:118;4525:474;;;;;:::o;5005:122::-;5078:24;5096:5;5078:24;:::i;:::-;5071:5;5068:35;5058:63;;5117:1;5114;5107:12;5058:63;5005:122;:::o;5133:139::-;5179:5;5217:6;5204:20;5195:29;;5233:33;5260:5;5233:33;:::i;:::-;5133:139;;;;:::o;5278:1087::-;5397:6;5405;5413;5421;5429;5437;5486:3;5474:9;5465:7;5461:23;5457:33;5454:120;;;5493:79;;:::i;:::-;5454:120;5613:1;5638:53;5683:7;5674:6;5663:9;5659:22;5638:53;:::i;:::-;5628:63;;5584:117;5740:2;5766:68;5826:7;5817:6;5806:9;5802:22;5766:68;:::i;:::-;5756:78;;5711:133;5883:2;5909:53;5954:7;5945:6;5934:9;5930:22;5909:53;:::i;:::-;5899:63;;5854:118;6011:2;6037:53;6082:7;6073:6;6062:9;6058:22;6037:53;:::i;:::-;6027:63;;5982:118;6139:3;6166:53;6211:7;6202:6;6191:9;6187:22;6166:53;:::i;:::-;6156:63;;6110:119;6268:3;6295:53;6340:7;6331:6;6320:9;6316:22;6295:53;:::i;:::-;6285:63;;6239:119;5278:1087;;;;;;;;:::o;6371:169::-;6455:11;6489:6;6484:3;6477:19;6529:4;6524:3;6520:14;6505:29;;6371:169;;;;:::o;6546:176::-;6686:28;6682:1;6674:6;6670:14;6663:52;6546:176;:::o;6728:366::-;6870:3;6891:67;6955:2;6950:3;6891:67;:::i;:::-;6884:74;;6967:93;7056:3;6967:93;:::i;:::-;7085:2;7080:3;7076:12;7069:19;;6728:366;;;:::o;7100:419::-;7266:4;7304:2;7293:9;7289:18;7281:26;;7353:9;7347:4;7343:20;7339:1;7328:9;7324:17;7317:47;7381:131;7507:4;7381:131;:::i;:::-;7373:139;;7100:419;;;:::o;7525:223::-;7665:34;7661:1;7653:6;7649:14;7642:58;7734:6;7729:2;7721:6;7717:15;7710:31;7525:223;:::o;7754:366::-;7896:3;7917:67;7981:2;7976:3;7917:67;:::i;:::-;7910:74;;7993:93;8082:3;7993:93;:::i;:::-;8111:2;8106:3;8102:12;8095:19;;7754:366;;;:::o;8126:419::-;8292:4;8330:2;8319:9;8315:18;8307:26;;8379:9;8373:4;8369:20;8365:1;8354:9;8350:17;8343:47;8407:131;8533:4;8407:131;:::i;:::-;8399:139;;8126:419;;;:::o;8551:182::-;8691:34;8687:1;8679:6;8675:14;8668:58;8551:182;:::o;8739:366::-;8881:3;8902:67;8966:2;8961:3;8902:67;:::i;:::-;8895:74;;8978:93;9067:3;8978:93;:::i;:::-;9096:2;9091:3;9087:12;9080:19;;8739:366;;;:::o;9111:419::-;9277:4;9315:2;9304:9;9300:18;9292:26;;9364:9;9358:4;9354:20;9350:1;9339:9;9335:17;9328:47;9392:131;9518:4;9392:131;:::i;:::-;9384:139;;9111:419;;;:::o;9536:180::-;9584:77;9581:1;9574:88;9681:4;9678:1;9671:15;9705:4;9702:1;9695:15;9722:233;9761:3;9784:24;9802:5;9784:24;:::i;:::-;9775:33;;9830:66;9823:5;9820:77;9817:103;;9900:18;;:::i;:::-;9817:103;9947:1;9940:5;9936:13;9929:20;;9722:233;;;:::o;9961:358::-;10095:4;10133:2;10122:9;10118:18;10110:26;;10146:84;10227:1;10216:9;10212:17;10203:6;10146:84;:::i;:::-;10240:72;10308:2;10297:9;10293:18;10284:6;10240:72;:::i;:::-;9961:358;;;;;:::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "checkInsurance(uint8,uint256)": "094815ef",
    "isInsured(uint256,uint256)": "e19cdacd",
    "issuePolicy(address,uint8,uint256,uint256,uint256,uint256)": "f618c68a",
    "policies(uint256)": "d3e89483"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"policyHolder\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum InsuranceManager.PolicyType\",\"name\":\"policyType\",\"type\":\"uint8\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"insuredTokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"}],\"name\":\"PolicyIssued\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"enum InsuranceManager.PolicyType\",\"name\":\"_policyType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_tokenId\",\"type\":\"uint256\"}],\"name\":\"checkInsurance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"isInsured\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_policyHolder\",\"type\":\"address\"},{\"internalType\":\"enum InsuranceManager.PolicyType\",\"name\":\"_policyType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_insuredTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_coverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_expiryTimestamp\",\"type\":\"uint256\"}],\"name\":\"issuePolicy\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"policies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"policyId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"policyHolder\",\"type\":\"address\"},{\"internalType\":\"enum InsuranceManager.PolicyType\",\"name\":\"policyType\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"insuredTokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"coverageAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"premium\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"expiryTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isActive\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Manages insurance policies for vessel and cargo NFTs. It now uses token IDs instead of the old sequential IDs.\",\"kind\":\"dev\",\"methods\":{\"checkInsurance(uint8,uint256)\":{\"details\":\"Public view function to verify if an NFT has an active insurance policy.\",\"params\":{\"_policyType\":\"The type of NFT to check.\",\"_tokenId\":\"The token ID of the vessel or cargo.\"},\"returns\":{\"_0\":\"A boolean indicating if the entity is currently insured.\"}},\"issuePolicy(address,uint8,uint256,uint256,uint256,uint256)\":{\"details\":\"Issues a new insurance policy for a specific NFT.\",\"params\":{\"_coverageAmount\":\"The value of the coverage.\",\"_expiryTimestamp\":\"When the policy expires.\",\"_insuredTokenId\":\"The token ID of the vessel or cargo NFT being insured.\",\"_policyHolder\":\"The address of the entity buying the insurance.\",\"_policyType\":\"Whether the policy covers a Vessel or Cargo.\",\"_premium\":\"The cost of the policy, to be paid upfront.\"}}},\"title\":\"InsuranceManager (Refactored for NFTs)\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/InsuranceManager.sol\":\"InsuranceManager\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"src/InsuranceManager.sol\":{\"keccak256\":\"0xe45e82af1b4ec2bad288b0abf1802f8636876eb225e7ba4cc835493454a88260\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc4759bd0ce3d804da9b45ead52e7a2d117f38f6cce1391eb1a729235daa4148\",\"dweb:/ipfs/QmfJVKc1G6GRG13CXwP1hy4SMbGPoq9h5wamhmg8UdLwDS\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.26+commit.8a97fa7a"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "policyId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "policyHolder",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "enum InsuranceManager.PolicyType",
              "name": "policyType",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "insuredTokenId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "coverageAmount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "PolicyIssued",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "enum InsuranceManager.PolicyType",
              "name": "_policyType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "_tokenId",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "checkInsurance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isInsured",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_policyHolder",
              "type": "address"
            },
            {
              "internalType": "enum InsuranceManager.PolicyType",
              "name": "_policyType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "_insuredTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_coverageAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_premium",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_expiryTimestamp",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "issuePolicy"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "policies",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "policyId",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "policyHolder",
              "type": "address"
            },
            {
              "internalType": "enum InsuranceManager.PolicyType",
              "name": "policyType",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "insuredTokenId",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "coverageAmount",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "premium",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "expiryTimestamp",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "isActive",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "checkInsurance(uint8,uint256)": {
            "details": "Public view function to verify if an NFT has an active insurance policy.",
            "params": {
              "_policyType": "The type of NFT to check.",
              "_tokenId": "The token ID of the vessel or cargo."
            },
            "returns": {
              "_0": "A boolean indicating if the entity is currently insured."
            }
          },
          "issuePolicy(address,uint8,uint256,uint256,uint256,uint256)": {
            "details": "Issues a new insurance policy for a specific NFT.",
            "params": {
              "_coverageAmount": "The value of the coverage.",
              "_expiryTimestamp": "When the policy expires.",
              "_insuredTokenId": "The token ID of the vessel or cargo NFT being insured.",
              "_policyHolder": "The address of the entity buying the insurance.",
              "_policyType": "Whether the policy covers a Vessel or Cargo.",
              "_premium": "The cost of the policy, to be paid upfront."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": false,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/InsuranceManager.sol": "InsuranceManager"
      },
      "evmVersion": "cancun",
      "libraries": {}
    },
    "sources": {
      "src/InsuranceManager.sol": {
        "keccak256": "0xe45e82af1b4ec2bad288b0abf1802f8636876eb225e7ba4cc835493454a88260",
        "urls": [
          "bzz-raw://cc4759bd0ce3d804da9b45ead52e7a2d117f38f6cce1391eb1a729235daa4148",
          "dweb:/ipfs/QmfJVKc1G6GRG13CXwP1hy4SMbGPoq9h5wamhmg8UdLwDS"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 13
}